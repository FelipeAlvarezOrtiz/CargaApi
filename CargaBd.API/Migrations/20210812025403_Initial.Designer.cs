// <auto-generated />
using System;
using CargaBd.API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CargaBd.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210812025403_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CargaBd.API.Models.Payload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("CheckinTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckoutCommet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckoutLatitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckoutLongitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckoutObservation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckoutTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Created")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentEta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Driver")
                        .HasColumnType("int");

                    b.Property<string>("Duration")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EstimatedTimeArrival")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedTimeDeparture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EtaCurrent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EtaPredicted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraFieldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fleet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeocodeAlert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Has_alert")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Load")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Load2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Load3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Modified")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("PlannedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Priority")
                        .HasColumnType("bit");

                    b.Property<int>("PriorityLevel")
                        .HasColumnType("int");

                    b.Property<string>("ProgrammedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Route")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<string>("RouteEstimatedTimeStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Title")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("TrackingId")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Vehicle")
                        .HasColumnType("int");

                    b.Property<string>("VisitType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WindowEnd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WindowEnd2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WindowStart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WindowStart2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Payload");
                });

            modelBuilder.Entity("CargaBd.API.Models.Picture", b =>
                {
                    b.Property<int>("IdPicture")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PayloadId")
                        .HasColumnType("int");

                    b.Property<string>("UrlPicture")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("IdPicture");

                    b.HasIndex("PayloadId");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("CargaBd.API.Models.SkillOptional", b =>
                {
                    b.Property<int>("IdSkill")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreSkillOptional")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("PayloadId")
                        .HasColumnType("int");

                    b.HasKey("IdSkill");

                    b.HasIndex("PayloadId");

                    b.ToTable("SkillsOptionals");
                });

            modelBuilder.Entity("CargaBd.API.Models.SkillRequired", b =>
                {
                    b.Property<int>("IdSkill")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreSkillRequired")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("PayloadId")
                        .HasColumnType("int");

                    b.HasKey("IdSkill");

                    b.HasIndex("PayloadId");

                    b.ToTable("SkillsRequired");
                });

            modelBuilder.Entity("CargaBd.API.Models.Tag", b =>
                {
                    b.Property<int>("IdTag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreTag")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("PayloadId")
                        .HasColumnType("int");

                    b.HasKey("IdTag");

                    b.HasIndex("PayloadId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("CargaBd.API.Models.Picture", b =>
                {
                    b.HasOne("CargaBd.API.Models.Payload", null)
                        .WithMany("Pictures")
                        .HasForeignKey("PayloadId");
                });

            modelBuilder.Entity("CargaBd.API.Models.SkillOptional", b =>
                {
                    b.HasOne("CargaBd.API.Models.Payload", null)
                        .WithMany("SkillsOptional")
                        .HasForeignKey("PayloadId");
                });

            modelBuilder.Entity("CargaBd.API.Models.SkillRequired", b =>
                {
                    b.HasOne("CargaBd.API.Models.Payload", null)
                        .WithMany("SkillsRequired")
                        .HasForeignKey("PayloadId");
                });

            modelBuilder.Entity("CargaBd.API.Models.Tag", b =>
                {
                    b.HasOne("CargaBd.API.Models.Payload", null)
                        .WithMany("Tags")
                        .HasForeignKey("PayloadId");
                });

            modelBuilder.Entity("CargaBd.API.Models.Payload", b =>
                {
                    b.Navigation("Pictures");

                    b.Navigation("SkillsOptional");

                    b.Navigation("SkillsRequired");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
